/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, { Component } from 'react';
import { Platform, StyleSheet, Text, View } from 'react-native';
import DiskUtils from 'react-native-disk-utils';

export default class App extends Component<{}> {
  state = {
    status: 'starting',
    message: '--',
    diskSize: '',
    diskAvailableSize: '',
    memorySize: '',
    memoryAvailableSize: '',
    appMemorySize: '',
  };

  intervalID = null;

  componentDidMount() {
    DiskUtils.sampleMethod('Testing', 123, (message) => {
      this.setState({
        status: 'native callback received',
        message
      });
    });

    // Set up a periodic task every 5 seconds
    this.intervalID = setInterval(this.periodicTask, 3000);

    this.refresh();
  }

  componentWillUnmount() {
    // Clear the interval right before component unmount
    clearInterval(this.intervalID);
  }

  periodicTask = () => {
    console.log('This will run every 3 seconds!');

    this.refresh();
  }

  refresh() {
    DiskUtils.getStorageSize((size) => {
      this.setState({
        diskSize: size,
      });
    });
    DiskUtils.getStorageAvailableSize((freeSize) => {
      this.setState({
        diskAvailableSize: freeSize,
      });
    });
    DiskUtils.getMemorySize((size) => {
      this.setState({
        memorySize: size,
      });
    });
    DiskUtils.getMemoryAvailableSize((freeSize) => {
      this.setState({
        memoryAvailableSize: freeSize,
      });
    });
    DiskUtils.getAppMemory((size) => {
      this.setState({
        appMemorySize: size,
      });
    });
  }

  render() {
    return (
      <View style={styles.container}>
        <Text style={styles.welcome}>☆DiskUtils example☆</Text>
        <Text style={styles.instructions}>STATUS: {this.state.status}</Text>
        <Text style={styles.welcome}>☆NATIVE CALLBACK MESSAGE☆</Text>
        <Text style={styles.instructions}>{this.state.message}</Text>

        <Text style={styles.instructions}>Disk Total: {parseInt(this.state.diskSize)/1024/1024/1024} GB</Text>
        <Text style={styles.instructions}>Disk Free: {parseInt(this.state.diskAvailableSize)/1024/1024/1024} GB</Text>
        <Text style={styles.instructions}>Memory Total: {parseInt(this.state.memorySize)/1024/1024/1024} GB</Text>
        <Text style={styles.instructions}>Memory Free: {parseInt(this.state.memoryAvailableSize)/1024/1024/1024} GB</Text>
        <Text style={styles.instructions}>Memory App: {parseInt(this.state.appMemorySize)/1024/1024} MB</Text>

        </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5,
  },
});
